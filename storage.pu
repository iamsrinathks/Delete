import requests
from google.cloud import storage

def get_access_token():
    """Fetch the OAuth 2.0 access token from the metadata server."""
    metadata_url = "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token"
    headers = {"Metadata-Flavor": "Google"}
    
    response = requests.get(metadata_url, headers=headers)
    response.raise_for_status()  # Ensure we got a valid response
    return response.json()["access_token"]

def upload_blob(bucket_name, source_file_name, destination_blob_name):
    """Uploads a file to the bucket using PUT method."""
    
    # Get access token using Workload Identity or default credentials
    access_token = get_access_token()

    # Construct the GCS URL for PUT upload
    url = f"https://storage.googleapis.com/upload/storage/v1/b/{bucket_name}/o?uploadType=media&name={destination_blob_name}"

    # Read the file contents
    with open(source_file_name, "rb") as file_data:
        file_contents = file_data.read()

    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/octet-stream"
    }

    # Use PUT instead of POST
    response = requests.put(url, headers=headers, data=file_contents)

    if response.status_code == 200:
        print(f"✅ File uploaded successfully to {bucket_name}/{destination_blob_name}")
    else:
        print(f"❌ Failed to upload file: {response.text}")

# Example Usage
upload_blob("your-bucket-name", "path/to/local/file.txt", "uploads/file.txt")
