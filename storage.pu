import google.auth
import google.auth.transport.requests
import requests

def get_access_token():
    """Fetch the access token using Google-auth."""
    creds, _ = google.auth.default(scopes=["https://www.googleapis.com/auth/cloud-platform"])
    creds.refresh(google.auth.transport.requests.Request())  # Refresh token if needed
    return creds.token

def upload_to_gcs(bucket_name, source_file_path, destination_blob_name):
    """
    Uploads a file to GCS using REST API with Harness OIDC authentication.
    
    :param bucket_name: GCS bucket name.
    :param source_file_path: Local file path to upload.
    :param destination_blob_name: The destination file name in GCS.
    """
    access_token = get_access_token()

    url = f"https://storage.googleapis.com/upload/storage/v1/b/{bucket_name}/o?uploadType=media&name={destination_blob_name}"

    with open(source_file_path, "rb") as file_data:
        file_contents = file_data.read()

    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/octet-stream"
    }

    response = requests.post(url, headers=headers, data=file_contents)

    if response.status_code == 200:
        print(f"✅ File uploaded successfully to {bucket_name}/{destination_blob_name}")
    else:
        print(f"❌ Failed to upload file: {response.text}")

# Example Usage
upload_to_gcs("your-bucket-name", "path/to/local/file.txt", "uploads/file.txt")
