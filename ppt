#!/usr/bin/env python

import re
import sys

# Define the regex pattern for conventional commits
conventional_commit_regex = re.compile(
    r"^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}"
    r"($[\w\-\.]+$)?(!)?: ([\w ])+([\s\S]*)"
)

# Check the commit message file passed as an argument
commit_msg_file = sys.argv[1]

with open(commit_msg_file, 'r', encoding='utf-8') as file:
    commit_message = file.read()

# Validate the commit message against the regex
if not conventional_commit_regex.match(commit_message):
    print("Cannot commit: the commit message does not comply with conventional commits standards.")
    print("""
    Examples of valid commit messages:
    - feat(parser): add support for new syntax
    - fix(ui): handle edge case in layout
    - docs: update API documentation
    """)
    sys.exit(1)

sys.exit(0)
